<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Changelogs on Devies Tech Culture Business Blog</title><link>https://blog.devies.se/tags/changelogs/</link><description>Recent content in Changelogs on Devies Tech Culture Business Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 27 Jul 2022 16:43:10 +0200</lastBuildDate><atom:link href="https://blog.devies.se/tags/changelogs/index.xml" rel="self" type="application/rss+xml"/><item><title>Conventional Commits and Generating Changelogs</title><link>https://blog.devies.se/posts/conventional-commits-and-generating-changelogs/</link><pubDate>Wed, 27 Jul 2022 16:43:10 +0200</pubDate><guid>https://blog.devies.se/posts/conventional-commits-and-generating-changelogs/</guid><description>&lt;p>Documentation, while in many cases important, might not be the first thing you as a developer want to spend time on doing.
Something you might do like as a developer is to spend a lot of time automating simple but tedious tasks in order to never have to do it manually again!
With documentation being a particularly important part in our project we were extra keen on finding as many ways of automating documentation as possible.
In this post I will go through how we utilized &lt;code>Conventional Commits&lt;/code>, an Azure Devops extension called &lt;code>Commitizen&lt;/code> and an npm package called &lt;code>Standard version&lt;/code> to automatically generate changelogs in our Azure Devops CI environment.&lt;/p></description></item></channel></rss>