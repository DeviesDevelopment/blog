<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nginx on Devies Tech Culture Business Blog</title><link>https://blog.devies.se/tags/nginx/</link><description>Recent content in Nginx on Devies Tech Culture Business Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 20 May 2022 14:56:30 +0200</lastBuildDate><atom:link href="https://blog.devies.se/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>Trick your local web server using the Host header</title><link>https://blog.devies.se/posts/trick-local-web-server-using-host-header/</link><pubDate>Fri, 20 May 2022 14:56:30 +0200</pubDate><guid>https://blog.devies.se/posts/trick-local-web-server-using-host-header/</guid><description>&lt;p>&lt;strong>TLDR&lt;/strong>: If you need to &amp;ldquo;trick&amp;rdquo; a local web server that you&amp;rsquo;re making requests to a certain domain, but do not want (or have permissions) to modify &lt;code>/etc/hosts&lt;/code> - Set the intended domain in the &lt;code>Host&lt;/code> request header instead.&lt;/p>
&lt;hr>
&lt;p>We are currently working on a project where we have an nginx instance that is redirecting traffic for many different domains. In our case, the nginx is an ingress controller in a kubernetes cluster, but you might use a similar approach if you&amp;rsquo;re hosting multiple websites on the same webserver.&lt;/p></description></item><item><title>Introducing Frontman</title><link>https://blog.devies.se/posts/introducing-frontman/</link><pubDate>Fri, 28 Jan 2022 10:08:32 +0200</pubDate><guid>https://blog.devies.se/posts/introducing-frontman/</guid><description>&lt;p>&lt;a href="https://github.com/DeviesDevelopment/frontman">Frontman&lt;/a> is a very light-weight NGINX reverse proxy that is deployed using Docker. Its purpose is to act as the entry point to your server. It will redirect incoming traffic to one out of many Docker-based applications running on the same server, based on the hostname in the incoming request.&lt;/p>
&lt;p>The rationale behind this is that it enables you to host as many services as you want on the same server, while still only keeping ports 80 and 443 open to the outside world.&lt;/p></description></item></channel></rss>