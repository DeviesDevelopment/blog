<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DNS on Devies Tech Culture Business Blog</title><link>https://blog.devies.se/tags/dns/</link><description>Recent content in DNS on Devies Tech Culture Business Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 20 May 2022 14:56:30 +0200</lastBuildDate><atom:link href="https://blog.devies.se/tags/dns/index.xml" rel="self" type="application/rss+xml"/><item><title>Trick your local web server using the Host header</title><link>https://blog.devies.se/posts/trick-local-web-server-using-host-header/</link><pubDate>Fri, 20 May 2022 14:56:30 +0200</pubDate><guid>https://blog.devies.se/posts/trick-local-web-server-using-host-header/</guid><description>&lt;p>&lt;strong>TLDR&lt;/strong>: If you need to &amp;ldquo;trick&amp;rdquo; a local web server that you&amp;rsquo;re making requests to a certain domain, but do not want (or have permissions) to modify &lt;code>/etc/hosts&lt;/code> - Set the intended domain in the &lt;code>Host&lt;/code> request header instead.&lt;/p>
&lt;hr>
&lt;p>We are currently working on a project where we have an nginx instance that is redirecting traffic for many different domains. In our case, the nginx is an ingress controller in a kubernetes cluster, but you might use a similar approach if you&amp;rsquo;re hosting multiple websites on the same webserver.&lt;/p></description></item></channel></rss>