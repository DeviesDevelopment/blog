<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pipeline on Devies Tech Culture Business Blog</title><link>https://blog.devies.se/tags/pipeline/</link><description>Recent content in Pipeline on Devies Tech Culture Business Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 27 Jan 2023 08:00:00 +0100</lastBuildDate><atom:link href="https://blog.devies.se/tags/pipeline/index.xml" rel="self" type="application/rss+xml"/><item><title>Xcode 14 &amp; SPM: Deployment Pipeline in Azure</title><link>https://blog.devies.se/posts/xcode-14-manual-signing/</link><pubDate>Fri, 27 Jan 2023 08:00:00 +0100</pubDate><guid>https://blog.devies.se/posts/xcode-14-manual-signing/</guid><description>&lt;p>&lt;em>&lt;a href="#tldr">tl;dr&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>Continuous Deployment (CD) pipelines are great tools to automate the deployment process of a software. Their main objective is to minimise human error and maintain a consistent process for how the software is released.&lt;/p>
&lt;p>For Xcode projects this becomes a time critical process once the project has to be built for different configurations and/or environments. Since every configuration might require a different signing method, or even different deployment platform.&lt;/p></description></item><item><title>We Got Cached ðŸ˜±</title><link>https://blog.devies.se/posts/we-got-cached/</link><pubDate>Fri, 13 May 2022 13:29:31 +0200</pubDate><guid>https://blog.devies.se/posts/we-got-cached/</guid><description>&lt;p>For the past couple of weeks, we&amp;rsquo;ve been working on a React app from scratch. Additionally, we&amp;rsquo;ve added pipelines in Azure as an attempt to achieve &lt;span style="font-family:Arial;color:#00c0ff;">MAXIMUM EFFICIENCY&lt;/span> when it comes to deployment and integration. So there we are. It&amp;rsquo;s a lovely morning. The sun is shining, the coffee is warm, and we&amp;rsquo;re ready to drop some lines of code! ðŸ˜Ž&lt;/p>
&lt;p>Last week we built and deployed a version of our React app that had a slightly faulty CSS attribute that made the header of the app take up the whole screen. Thus our first and foremost task was to fix it so that it only takes up a small area at the top of the screen. We used the Inspection feature in Firefox Developer Edition to pinpoint the faulty CSS and determine the issue, which we managed to do. The next step was to apply that fix in our code to see what would happen. The fix worked locally by running the React app using &lt;code>yarn start&lt;/code> as well as deploying a Docker image. Great, the fix is ready to be deployed using our Azure pipelines!&lt;/p></description></item></channel></rss>