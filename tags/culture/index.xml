<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Culture on Devies Tech Culture Business Blog</title><link>https://deviesdevelopment.github.io/blog/tags/culture/</link><description>Recent content in Culture on Devies Tech Culture Business Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 15 Mar 2024 13:25:49 +0100</lastBuildDate><atom:link href="https://deviesdevelopment.github.io/blog/tags/culture/index.xml" rel="self" type="application/rss+xml"/><item><title>The Office Movement Aka. How to Stay Healthy in the Office</title><link>https://deviesdevelopment.github.io/blog/posts/the-office-movement-aka.-how-to-stay-healthy-in-the-office/</link><pubDate>Fri, 15 Mar 2024 13:25:49 +0100</pubDate><guid>https://deviesdevelopment.github.io/blog/posts/the-office-movement-aka.-how-to-stay-healthy-in-the-office/</guid><description>Header Image by macrovector on Freepik
We love to share our knowledge and improve each other That is why we have this series of presentations in the office about office ergonomics. Yes series, this is just the beginning, a general introduction to the topic. So this is a summary of the initial presentation. Later we will have more specific examples.
Who are you to tell me what to do I am not telling you what to do but recommend ways to keep your joints and bones and muscles healthy, based on a lot of research and my own experience.</description></item><item><title>A Structured Approach to Work With Software Development Tasks</title><link>https://deviesdevelopment.github.io/blog/posts/a-structured-approach-to-work-with-software-development-tasks/</link><pubDate>Thu, 01 Jun 2023 07:31:20 +0200</pubDate><guid>https://deviesdevelopment.github.io/blog/posts/a-structured-approach-to-work-with-software-development-tasks/</guid><description>Sometimes I see people (myself included) working on software development tasks in a non-structured way. You might have a vague understanding of what you&amp;rsquo;re about to accomplish. Aimlessly traversing the code base, hoping to find places that you might need to change. You instantly start to chase new ideas, while forgetting about prior (and possibly important) ideas. It might be hard to determine when you&amp;rsquo;re done. You might not commit intermediary working states, and have a hard time finding what you&amp;rsquo;ve messed up once something is broken.</description></item></channel></rss>